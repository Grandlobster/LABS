#include<iostream>
#include<string>
using namespace std;
struct node{
    string label;
    int ch_count;
    struct node *child[10];
}*root;
class GT{
    public:
            void create_tree();
            void display(node *r1);
    GT()
    {
        root=NULL;
    }
};
void GT::create_tree(){
    int tbooks,tchapters,i,j,k;
    root=new node;
    cout<<"Enter the name of tree:"<<endl;
    cin>>root->label;
    cout<<"Enter the number of chapters:"<<endl;
    cin>>root->ch_count;
    for(i =0;i<root->ch_count;i++){
        root->child[i]=new node;
        cout<<"Enter name of chapter"<<endl;
        cin>>root->child[i]->label;
        cout<<"Enter the number of sections in chapters:";
        cin>>root->child[i]->ch_count;
        for(j=0;j<root->child[i]->ch_count;j++){
            root->child[i]->child[j]=new node;
            cout<<"Enter name of section"<<endl;
            cin>>root->child[i]->child[j]->label;
            cout<<"Enter the number of subsections";
            cin>>root->child[i]->child[j]->ch_count;
            for(k;k<root->child[i]->child[j]->ch_count;k++){
                root->child[i]->child[j]->child[k]=new node;
                cout<<"Enter name of subsection:"<<endl;
                cin>>root->child[i]->child[j]->child[k]->label;
            }

        }
    }


}
void GT::display(node *r1){
    if(r1!=NULL){
        int i,j,k,tchapters;
        cout<<"DISPLAY FUNCTION\n";
        cout<<"book title\n"<<r1->label;
        tchapters=r1->ch_count;
        for(i=0;i<tchapters;i++){
            cout<<"Chapter number:\n"<<i+1;
            cout<<r1->child[i]->label;
            cout<<"Sections\n";
            for(j=0;j<r1->child[i]->ch_count;j++){
                cout<<r1->child[i]->child[j]->label;
                cout<<"Sub-Sections\n"<<endl;
                for(k=0;k<r1->child[i]->child[j]->ch_count;k++){
                    cout<<r1->child[i]->child[j]->child[k]->label<<endl;

                }
            }
        }
    }

}
int main(){
    GT obj1;
    int ch;
    cout<<"\n1.Create Tree \n2.Display \n3.Exit \nEnter your choice:";
    cin>>ch;
    switch(ch){
        case 1:
            obj1.create_tree();
            break;
        case 2:
            obj1.display(root);
            break;
        case 3:
            break;
    }
    return 0;
}
